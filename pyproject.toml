[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "Blog"
version = "0.1.0"
description = ""
# readme = "README.md"
requires-python = ">=3.10"
license = { file = "LICENSE" }

# # The following would provide a command line executable called `sample`
# # which executes the function `main` from this package when invoked.
# [project.scripts]
# sample = "sample:main"


# This is configuration specific to the `hatch` build backend.
[tool.hatch.build.targets.sdist]
# include = [
#   "pkg/*.py",
#   "/tests",
# ]
exclude = ["*.ipynb"]

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.pytest.ini_options]
pythonpath = ["."]

[tool.ruff]
# https://github.com/astral-sh/ruff

select = [
    "A",
    "AIR",
    "B",
    "C",
    "C4",
    "D",
    "DTZ",
    "E",
    "EM",
    "F",
    "G",
    "I",
    "N",
    "NPY",
    "PD",
    "PL",
    "PT",
    "RUF",
    "SIM",
    "UP",
    "W",
]
ignore = [
    "D100", # Missing docstring in public module
    "D104", # Missing docstring in public package.
    "D105", # Missing docstring in magic method
    "D107", # Missing docstring in __init__.
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start on the first line.
    "D417", # Requires documentation for every function parameter.
]

# Allow autofix for all enabled rules (when `--fix`) is provided.
fixable = [
    "A",
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "N",
    "Q",
    "S",
    "T",
    "W",
    "ANN",
    "ARG",
    "BLE",
    "COM",
    "DJ",
    "DTZ",
    "EM",
    "ERA",
    "EXE",
    "FBT",
    "ICN",
    "INP",
    "ISC",
    "NPY",
    "PD",
    "PGH",
    "PIE",
    "PL",
    "PT",
    "PTH",
    "PYI",
    "RET",
    "RSE",
    "RUF",
    "SIM",
    "SLF",
    "TCH",
    "TID",
    "TRY",
    "UP",
    "YTT",
]
unfixable = []

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "tests",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Assume Python 3.10.
target-version = "py310"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
